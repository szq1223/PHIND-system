# s3_upload.py

import boto3
import os
import json
import datetime

class S3Uploader:
    S3_BUCKET = 'phindsystem'

    def __init__(self):
        self.s3 = boto3.client('s3')

    def upload_to_s3(self, file_path):
        try:
            file_name = os.path.basename(file_path)
            self.s3.upload_file(file_path, self.S3_BUCKET, file_name)
            print(f"Uploaded {file_name} to S3 bucket: {self.S3_BUCKET}")
        except Exception as e:
            print(f"Failed to upload {file_name} to S3 bucket: {str(e)}")

    def upload_event_data(self, image_filenames, user_info):
        if not image_filenames:
            print("No images captured. Skipping upload.")
            return

        # Calculate total event time
        try:
            first_image_time = datetime.datetime.strptime(
                os.path.basename(image_filenames[0]), '%Y%m%d%H%M%S.jpg')
            last_image_time = datetime.datetime.strptime(
                os.path.basename(image_filenames[-1]), '%Y%m%d%H%M%S.jpg')
            total_event_time = (last_image_time - first_image_time).total_seconds()
        except Exception as e:
            print(f"Error calculating total event time: {e}")
            total_event_time = 0

        if not user_info:
            user_info = "Unknown User"

        event_data = {
            "user": user_info,
            "total_event_time": total_event_time
        }

        # Create JSON filename similar to the last captured image
        json_filename = os.path.basename(image_filenames[-1]).replace(".jpg", ".json")
        json_filepath = os.path.join("/home/<your-username>/images", json_filename)

        # Display the user name
        print(f"User: {user_info}")

        # Save the JSON file
        try:
            with open(json_filepath, 'w') as json_file:
                json.dump(event_data, json_file)
            print(f"Generated JSON file: {json_filepath}")
        except Exception as e:
            print(f"Failed to write JSON file: {e}")
            return

        # Upload JSON to S3
        self.upload_to_s3(json_filepath)

        # Upload images to S3
        for image_file in image_filenames:
            self.upload_to_s3(image_file)
